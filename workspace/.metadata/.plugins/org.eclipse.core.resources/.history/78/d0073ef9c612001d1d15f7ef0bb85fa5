
public class Main {
	
	public static void main(String[] args) {
	
		//메소드를 왜 사용하는지에 대해 이미 알아보았음.
		//클래스의 메소드 사용시 4가지 문법적 모습(리턴 ox, 파라미터 ox)
		Test test=new Test();
		
		//1)
		test.aaa();//기능 사용 - 메소드 호출
		
		//2
		test.bbb(50);
	
		//3
		int k = test.ccc();
		System.out.println("k: "+k);
		
		//4
		double m =test.ddd(3.14, 2.45);
		System.out.println("m: "+m);
		/////////////////////////////////////////
		
		System.out.println();
		
		//기능(메소드)만 있는 클래스도 존재할 수 있음.
		
		int a=10;
		int b=4;
		
		//4칙연산을 해주는 계산기 객체 생성하여 사용해보기(메소드만 있는 클래스)
		Caculator cal=new Caculator();
		
		
		int sum=cal.add(a, b);
		System.out.println("sum: "+sum);
		
		int sub=cal.subtract(a, b);
		System.out.println("sub: "+sub);
		
		int mul=cal.multiple(a, b);
		System.out.println("mul: "+mul);
		
		int div=cal.divide(a, b);
		System.out.println("div: "+div);
		
		//위에서 만든 계산기 객체(cal)은 값들을 잘 걔산해주는 것 처럼 보임.
		//하지만..치명적 문제가 존재함
		
		//연산에 사용할 피연산자들이 double형일 때는?? 사직연산자들이 올바로 동작할까?
		double c=3.5;
		double d=4.6;
		
		//double sum2=cal.add(c,d);//int형에는 double형 값을 전달할 수 없음.
		//기존 int형 파라미터의 메소드 기능은 사용할 수 없음.
		//그럼 double형 파라미터로 계산하는 별도의 기능이 계산기에 추가로 존재해야 함.
		
		double sum2=cal.adddouble(c, d);
	}
	
}
